package javaexp.a09_inherit;

public class A12_Interface {

	public static void main(String[] args) {
		// 다형성 처리
		Wing w01 = new Wing01();
		Wing w02 = new Wing02();
		w01.fly();
		w02.fly();
		// ex) SwimmingWay 인터페이스를 선언하고 상수로 "수영" 추상 메서드 swimming()
		//		Swimming01 우리동네 풀장을 수영하다. Swimming02 호수를 수영하다
		//		로 다형성으로 선언 호출 처리
		
		SwimmingWay sw01 = new Swimming01();
		SwimmingWay sw02 = new Swimming02();
		sw01.swimming();
		sw02.swimming();

	}
}

class Robot {
	private String kind;
	private Wing wing;
	
}

interface SwimmingWay {
	String SWIM = "수영하다."; // public static final로 자동 설정 (변경 불가)
	void swimming(); // 자동 abstract(추상) 설정 
}

class Swimming01 implements SwimmingWay {

	@Override
	public void swimming() {
		System.out.println("우리 동네 풀장을 " + SWIM);
	}
}

class Swimming02 implements SwimmingWay {

	@Override
	public void swimming() {
		System.out.println("호수를 " + SWIM);
	}
}


interface Wing{
	String NAME = "날개"; // public static final 자동 생략
	void fly(); // public abstract 자동 생략
}

// 인터페이스를 상속 받을 때는 implements 인터페이스명 으로 선언함
class Wing01 implements Wing {
//	NAME = "날개 1호"; static final인 변수이므로 재정의 불가능
	// 반드시 재정의 해야 함
	@Override
	public void fly() {
		System.out.println(NAME + " 1호로 우리 동네를 날아다니다.");
		
	}
}

class Wing02 implements Wing {
	@Override
	public void fly() {
		System.out.println(NAME + " 2호로 아시아를 날아다니다.");
		
	}
}

